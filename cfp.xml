<Module>
<!--
 
This Gadget Design & Code: iG Lab
All subsequent code and resources used are proprietary of "iG-Lab" unless directly stated otherwise.
Copyright (C) 2008 iG Lab.

      UNAUTHORISED COPY OF THE CODE 
STRICTLY FORBIDDEN AND IS A DISCIPLINARY OFFENCE.  

can mail on : raj.janorkar+news@gmail.com

This work is licensed under the Creative Commons Attribution-Non Commercial-NoDerivs 2.5 License.
To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/2.5/ or
send a letter to Creative Commons, 543 Howard Street, 5th Floor, San Francisco, California, 94105, USA.
-->
<ModulePrefs title="WikiCFP" directory_title="My Wikicfp" description="Live updates of coming conferences related to research." title_url="http://www.igoogleportal.com" author="Wiki CFP" author_email="raj.janorkar@gmail.com" screenshot="https://lh3.googleusercontent.com/2tisrcMfC3Z4za78mCrUX_ZQ_aE6nMiiL1jd3DyXzyzyDqWhgqNEhkMRYi4cRB6YOwwvLd5cCGXmnJ4GnkHyquHJcNb0MMPR25bhCyWJUhdVg1h7sOjdiaoXCDCcNx8LMM-U3VDhB1BF8yiWPel-h1uRTMSLsKkOFzDpKbQn-Xqw1c2DyySs0ueXy6xbxJEE7re1pUlc55sRLq_ryMr_ZdjJ237tSTX5BTNkR4czIcL2OqEOxdohozMnhLSXmD8vQCtARQtiQBRuWyWoLYHQJY-nixUUXY6nOKtXzhhPWb5ZGe42h73YhFKUgOR6tFPbssFxW3JVNWrP-zj90WUSk6dJap5_7PwE2LOnCr02r5p2XZEcXdVggK68FF5H3cLZrqaEWX6QfYnTSkoAqkoE80-ogh4EBXS2i_BNOu0RBAEoOs4tuOLaWjOYPkyRxcff_-lsfdpRt3qgp553Lx56t5n1m5KfOeRi-ZA414ivY_YfZadjDcMNCv4TQVl5BBvwqVlNzDepLtSR4cs_ztiU794VlCNZKZv5w9XdULX_4DzYnFnWZaP9MZckvyB5viM_CJOh=w1068-h620-no" thumbnail="http://www.wikicfp.com/cfp/images/wikicfplogo-90.png" height="300" scrolling="false" singleton="false" category="news" category2="celebpicks">
<Require feature="dynamic-height"/>
<Require feature="setprefs"/>
<Require feature="tabs"/>
<Require feature="views"/>
<Require feature="minimessage"/>
</ModulePrefs>
<UserPref name="entries" display_name="# of Entries:" datatype="enum" default_value="4">
<EnumValue value="3"/>
<EnumValue value="4"/>
<EnumValue value="5"/>
<EnumValue value="7"/>
<EnumValue value="9"/>
</UserPref>
<UserPref name="refresh" display_name="Refresh:" datatype="enum" default_value="15">
<EnumValue value="0" display_value="Page Load"/>
<EnumValue value="5" display_value="5 Minutes"/>
<EnumValue value="15" display_value="15 Minutes"/>
<EnumValue value="30" display_value="30 Minutes"/>
<EnumValue value="60" display_value="1 Hour"/>
</UserPref>

<UserPref name="feedname1" display_name="Name:" datatype="string" default_value="Upcoming Conferences"/>
<UserPref name="feed1" display_name="Feed URL:" datatype="string" default_value="http://www.wikicfp.com/cfp/rss?list=85140"/><UserPref name="feed9" display_name="Feed URL:" datatype="string" default_value=""/>
<UserPref name="feedname10" display_name="Name:" datatype="string" default_value=""/>
<UserPref name="feed10" display_name="Feed URL:" datatype="string" default_value=""/>
<Content type="html" view="home">
<![CDATA[
<link rel="stylesheet" type="text/css" href="http://www.igoogleportal.com/gadget/googlecode/news/scripts/news_all.css"></link> <div id="content_div"></div> <script> // Global variables var prefs = new _IG_Prefs(__MODULE_ID__); var tabs = new _IG_Tabs(__MODULE_ID__); tabs.alignTabs("left", 7); var
]]>
<![CDATA[
container = _gel("content_div"); var refreshPeriod = 60*5; /** * Initialize tabs when page loads. * Create tab for each userpref only if userpref is not empty. */ function init() { var f1 = _trim(prefs.getString("feed1")); var f2 = _trim(prefs.getString("feed2")); var f3 = _trim(prefs.
]]>
<![CDATA[
getString("feed3")); var f4 = _trim(prefs.getString("feed4")); var n1 = _trim(prefs.getString("feedname1")); var n2 = _trim(prefs.getString("feedname2")); var n3 = _trim(prefs.getString("feedname3")); var n4 = _trim(prefs.getString("feedname4")); if (f1 != "") tabs.addDynamicTab(n1, callbackGenerator(f1, 1, 0, 0)); if (f2 != "") tabs.addDynamicTab(n2, callbackGenerator(f2, 1, 0, 0)); if (f3 != "") tabs.addDynamicTab(n3, callbackGenerator(f3, 1, 0, 0)); if (f4 != "") tabs.addDynamicTab(n4, callbackGenerator(f4, 1, 0, 0)); } /** * Creates a function that calls the tab's callback function * and passes along an additional variable from the calling environment. */ function callbackGenerator(feedUrl,expandFirst,showPlayButton, numbered) { return function(tabId) { selTabId = tabId; selFeedUrl = feedUrl; selExpandFirst = expandFirst; selShowPlayButton = showPlayButton; selNumbered = numbered; callbackTab(tabId, feedUrl, expandFirst, showPlayButton, numbered); if (prefs.getInt('refresh') > 0) { var callString = 'callbackTab("'; callString += selTabId + '","'; callString += selFeedUrl + '","'; callString += selExpandFirst + '","'; callString += selShowPlayButton + '","'; callString += selNumbered + '")'; var callInterval = prefs.getInt('refresh') * 60000; //alert(callString); setInterval(callString, callInterval); } } } function navigateTo(dest) { var supported_views = gadgets.views.getSupportedViews(); gadgets.views.requestNavigateTo(supported_views[dest]); } /** * Fetches an Atom or RSS feed and generates content inside the * selected tab's content container. This function is called whenever * a tab is selected. */ function callbackTab(tabId, feedUrl, expandFirst, showPlayButton,numbered) { var timeString = (new Date()).toLocaleTimeString(); //alert(timeString); var sUpdateTime = 'Updated at '+timeString; setTimeout('window.status = "'+sUpdateTime+'"',2000); var summaries = 120; if(isWideHome()) summaries=150; var entries = prefs.getInt("entries"); var container = _gel(tabId); feedUrl = makeCachedUrl(feedUrl,refreshPeriod); // Display loading message before fetching feed. // container.innerHTML = '<div class="statusLabel"><center> <img src=http://www.igoogleportal.com/gadget/googlecode/news/images/spinner.gif /><font color="#333333" size="2"> Loading...</font></center></div>'; // Callback function is defined within local scope. _IG_FetchXmlContent( feedUrl, function(response) { var html = new Array(); // Iterate through each feed entry and generate list of content. if(numbered==1) html.push('<ol class="feedList">'); else html.push('<ul class="feedList">'); var itemList = response.getElementsByTagName("channel").item(0).getElementsByTagName("item"); for (var i = 0; i < itemList.length && i < entries ; i++) { var nodeList = itemList.item(i).childNodes; html.push('<li>'); var imageRegex = "(<img.*?src.*?)>"; var nodeTitle = null; var nodeLink = null; var summ = null; var summary = null; var nodeMedia = null; var imageTag = null; for (var j = 0; j < nodeList.length ; j++) { var node = nodeList.item(j); if (node.nodeName == "title") nodeTitle = node.firstChild.nodeValue; if (node.nodeName == "link") nodeLink = node.firstChild.nodeValue; if (node.nodeName == "description" && node.firstChild != null){ summ = node.firstChild.nodeValue; /*** This code sometime not pick up the correct img details * If you face any issue please test below code *imageTag=summ.match(imageRegex); *	if(imageTag != null) *	imageTag = imageTag[1] +' width="60px" height="45px" align="right"></img>'; ***/ } if (node.nodeName == "media:content") nodeMedia = node.getAttribute("url"); } if(imageTag == null && nodeMedia != null) imageTag = '<img src="'+nodeMedia+'" width="76px" height="76px" align="right"></img>'; if(imageTag != null && i==0) html.push(imageTag); if(summ != null) summary=summ.replace(/<V?[^>]+>/gi,""); if (expandFirst==1 && i==0) html.push('<a class="georgia14" target="_blank" title="' + _hesc(nodeTitle) + '" href="' + formatLink(nodeLink) + '">' + _hesc(nodeTitle) + '</a><br/>'); else html.push('<a class="georgia14" target="_blank" title="' + _hesc(nodeTitle) + '" href="' + formatLink(nodeLink) + '">' + _hesc(nodeTitle) + '</a><br/>'); //if (summary != null && summary != "" && summaries > 0 && expandFirst==1 && i==0) { if (summary != null && summary != "" && summaries > 0 && expandFirst==1 ) { if (summary != null && summary.length > summaries) html.push('<span class="entrySummary">' + choptrailingChars(_hesc(summary.substr(0, summaries))) + '</span>'); else if(summary != null) html.push('<span class="entrySummary">' + _hesc(summary) + '</span>'); } if(showPlayButton==1 && i==0){ var bctid = getBctId(nodeLink); html.push('<a target="_blank" href="'+formatLink(nodeLink)+'"><img alt="play" border="0" height="17" width="51" src="https://ignews.googlecode.com/svn/images/playvideo.png"></a>'); } if(imageTag != null && i==0) html.push('<div class="clear"><!-- --></div>'); html.push('</li>'); } if(numbered==1) html.push('</ol>'); else html.push('</ul>'); // html.push('<div style="text-align: right; width: 100%;"><a href="javascript:navigateTo(\'canvas\')" class="georgia12" align="right" > more &raquo; </a></div>'); // container.innerHTML = html.join(''); document.getElementById('data').innerHTML = html.join(''); // Resize iframe height to fit content. _IG_AdjustIFrameHeight(); }); } // Set onload event handler to call init() _IG_RegisterOnloadHandler(init); </script> <script type="text/javascript" src="http://www.igoogleportal.com/gadget/googlecode/news/scripts/news_all.js"></script> <body> <script type="text/javascript"> function createCookie(name,value,days) { if (days) { var date = new Date(); date.setTime(date.getTime()+(days*24*60*60*1000)); var expires = "; expires="+date.toGMTString(); } else var expires = ""; document.cookie = name+"="+value+expires+"; path=/"; } function readCookie(name) { var nameEQ = name + "="; var ca = document.cookie.split(';'); for(var i=0;i < ca.length;i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1,c.length); if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); } return null; } function eraseCookie(name) { createCookie(name,"",-1); } </script> <script type="text/javascript" src="http://www.igoogleportal.com/gadget/internal/js/promo.js"></script> <script type="text/javascript"> var x = readCookie('today'); if (!x) { createCookie('today','once',1); var msg = new gadgets.MiniMessage(__MODULE_ID__); // Generate the message using DOM methods var div = document.createElement("div"); div.className="promo"; div.innerHTML=theAds[whichAds]; msg.createDismissibleMessage(div); } // else // eraseCookie('today'); </script> <div id="data"> <center> <img src=http://www.igoogleportal.com/gadget/googlecode/news/images/spinner.gif /><font color="#333333" size="2"> Loading...</font></center></div> <table width="100%" border = "0"><tr><td align="left"> <iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.google.com%2Fig%2Fadde%3Fmoduleurl%3Dignews.googlecode.com%2Fsvn%2Ftrunk%2Fmodules%2Fusa_today.xml&amp;layout=button_count&amp;show_faces=false&amp;width=130&amp;action=like&amp;font&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:130px; height:21px;" allowTransparency="true"></iframe> </td> <td align="right"><a href="javascript:navigateTo('canvas')" class="georgia12" align="right" > more &raquo; </a></td> </tr></table> </body>
]]>
</Content>
<Content view="canvas" type="html">
<![CDATA[
<link rel="stylesheet" type="text/css" href="http://www.igoogleportal.com/gadget/googlecode/news/scripts/news_all.css"></link> <div id="content_div"></div> <script> // Global variables var prefs = new _IG_Prefs(__MODULE_ID__); var tabs = new _IG_Tabs(__MODULE_ID__); var container = _gel("content_div"); var refreshPeriod = 60*5; /** * Initialize tabs when page loads. * Create tab for each userpref only if userpref is not empty. */ function init() { // Feed URL var f1 = _trim(prefs.getString("feed1")); var f2 = _trim(prefs.getString("feed2")); var f3 = _trim(prefs.getString("feed3")); var f4 = _trim(prefs.getString("feed4")); var f5 = _trim(prefs.getString("feed5")); var f6 = _trim(prefs.getString("feed6")); var f7 = _trim(prefs.getString("feed7")); var f8 = _trim(prefs.getString("feed8")); var f9 = _trim(prefs.getString("feed9")); var f10 = _trim(prefs.getString("feed10")); // Tab Name var n1 = _trim(prefs.getString("feedname1")); var n2 = _trim(prefs.getString("feedname2")); var n3 = _trim(prefs.getString("feedname3")); var n4 = _trim(prefs.getString("feedname4")); var n5 = _trim(prefs.getString("feedname5")); var n6 = _trim(prefs.getString("feedname6")); var n7 = _trim(prefs.getString("feedname7")); var n8 = _trim(prefs.getString("feedname8")); var n9 = _trim(prefs.getString("feedname9")); var n10 = _trim(prefs.getString("feedname10")); //Display loading message before fetching feed. //container.innerHTML = '<div class="statusLabel"><center><img src=http://www.igoogleportal.com/gadget/googlecode/news/images/spinner.gif /><font color="#333333" size="2"> Loading...</font></div>'; var countOpinion = 3; var countBlogs = 3; // below function is no more working if(isWideCanvas()){ countOpinion = 3; countBlogs = 3; } var ts=new Date().getTime(); ts=Math.floor(ts)% 1000000 ; pushFeedHTML(f1,'whatsnews','<li><font class="arial12header">'+n1+' :-</font></li>', 5, 500, false); pushFeedHTML(f2,'opinion','<li><div style="border-top: 2px solid rgb(209, 211, 212);padding:4px"></div><font class="arial12header">'+n2+' :-</font></li>', countOpinion , 500,false); pushFeedHTML(f3,'editorspicks','<li><div style="border-top: 2px solid rgb(209, 211, 212);padding:4px"></div><font class="arial12header">'+n3+' :-</font></li>', 3, 500,false); pushFeedHTML(f4,'blogs','<li><div style="border-top: 2px solid rgb(209, 211, 212);padding:4px"></div><font class="arial12header">'+n4+' :-</font></li>',countBlogs, 500,false); pushFeedHTML(f5,'markets', '<li><font class="arial12header">'+n5+' :-</font></li>', 3, 500, false); if (f6 != "") tabs.addDynamicTab(n6, callbackGenerator(f6, 0, 6)); if (f7 != "") tabs.addDynamicTab(n7, callbackGenerator(f7, 0, 6)); if (f8 != "") tabs.addDynamicTab(n8, callbackGenerator(f8, 0, 6)); if (f9 != "") tabs.addDynamicTab(n9, callbackGenerator(f9, 0, 6)); if (f10 != "") tabs.addDynamicTab(n10, callbackGenerator(f10, 0, 6)); tabs.setSelectedTab(0); var table = tabs.getSelectedTab().getContentContainer(); var node = _gel('tabs'); node.appendChild(table.parentNode); } // Set onload event handler to call init() function pushFeedHTML(feedUrl,id, prefix, entries, summaries) { // Callback function is defined within local scope. // Fetch feed successful. Generate HTML content from returned XML feedUrl = makeCachedUrl(feedUrl,refreshPeriod); _IG_FetchXmlContent( feedUrl, function(response) { var html = ['<ul class="wsj_articles">']; html.push(prefix); var imageRegex = "<img.*?src.*?\".*?\""; // Iterate through each feed entry and generate list of content. var itemList = response.getElementsByTagName("channel").item(0).getElementsByTagName("item"); for (var i = 0; i < itemList.length && i < entries ; i++) { var nodeList = itemList.item(i).childNodes; var nodeTitle = null; var nodeLink = null; var summ = null; var nodeMedia = null; var imageTag = null; var node = null; var summary = null; var linkTitle = null; for (var j = 0; j < nodeList.length ; j++) { node = nodeList.item(j); if (node.nodeName == "title") nodeTitle = node.firstChild.nodeValue; if (node.nodeName == "link") nodeLink = node.firstChild.nodeValue; if (node.nodeName == "description" && node.firstChild != null){ summ = node.firstChild.nodeValue; /*** This code sometime not pick up the correct img details * If you face any issue please test below code * if(summ != null) *	imageTag=summ.match(imageRegex); *	if(imageTag != null) *	imageTag += 'width="60px" height="45px" align="right"></img>'; ***/ } if (node.nodeName == "media:content") nodeMedia = node.getAttribute("url"); } if(imageTag == null && nodeMedia != null) imageTag = '<img src="'+nodeMedia+'" width="76px" height="76px" align="right"></img>'; html.push('<li>'); //if(imageTag != null && i==0) if(imageTag != null) html.push(imageTag); if(summ != null) summary=summ.replace(/<V?[^>]+>/gi,""); if(summary == null) linkTitle = nodeTitle; else linkTitle = summary; if(i==0) html.push('<a class="georgia18" target="_blank" title="' + _hesc(linkTitle) + '" href="' + formatLink(nodeLink) + '">' + _hesc(nodeTitle) + '</a>'); else html.push('<a class="georgia15" target="_blank" title="' + _hesc(linkTitle) + '" href="' + formatLink(nodeLink) + '">' + _hesc(nodeTitle) + '</a>'); if (summary != null && summary.length > summaries) html.push('<br/><span class="entrySummary">' + _hesc(summary.substr(0, summaries)) + ' </span>'); else if(summary != null) html.push('<br/><span class="entrySummary">' + _hesc(summary) + '</span>'); html.push('</li>'); } html.push('</ul>'); _gel(id).innerHTML = html.join(''); _IG_AdjustIFrameHeight(); }); } /** * Creates a function that calls the tab's callback function * and passes along an additional variable from the calling environment. */ function callbackGenerator(feedUrl, channelId, entries) { return function(tabId) { callbackTab(tabId, feedUrl, channelId, entries); }; } /** * Fetches an Atom or RSS feed and generates content inside the * selected tab's content container. This function is called whenever * a tab is selected. */ function callbackTab(tabId, feedUrl, channelId, entries) { feedUrl = makeCachedUrl(feedUrl,refreshPeriod); // Callback function is defined within local scope. _IG_FetchXmlContent( feedUrl, function(response) { var html = new Array(); // Iterate through each feed entry and generate list of content. html.push('<ol class="feedList">'); var itemList = response.getElementsByTagName("channel").item(channelId).getElementsByTagName("item"); for (var i = 0; (i < itemList.length && i < entries) ; i++) { var nodeList = itemList.item(i).childNodes; html.push('<li>'); var nodeTitle = null; var nodeLink = null; for (var j = 0; j < nodeList.length ; j++) { var node = nodeList.item(j); if (node.nodeName == "title") nodeTitle = node.firstChild.nodeValue; if (node.nodeName == "link") nodeLink = node.firstChild.nodeValue; } html.push('<a class="arial12" target="_blank" href="' + formatLink(nodeLink) + '">' + _hesc(nodeTitle) + '</a>'); html.push('</li>'); } html.push('</ol>'); document.getElementById('popular').innerHTML = html.join(""); // Resize iframe height to fit content. _IG_AdjustIFrameHeight(); }); } _IG_RegisterOnloadHandler(init); </script> <script type="text/javascript" src="http://www.igoogleportal.com/gadget/googlecode/news/scripts/news_all.js"></script> <body> <table> <tr><td colspan="3"><table width="100%"><tr><td colspan="2"><a href="http://www.usatoday.com" target="_blank"><img src="http://www.igoogleportal.com/gadget/googlecode/news/images/usa_today_logo.png" alt="USA Today" border="0"/></a></td> <td align="right"> <!-- Facebook like here --> </td></tr></table><div style="border-bottom: 4px solid rgb(209, 211, 212);"></div></td> </tr> <tr><td valign="top" class="vertical"> <table><tr><td valign="top" class="vertical" width="50%"><div id="whatsnews"></div><div id="opinion"></div></td> <td width="50%" valign="top"><div id="tabs"><div class="mostPopular"><font class="arial12header"> </font></div></div><div id="popular"></div><div id="editorspicks"></div><div id="blogs"></div></td> </tr> </table> </td><td valign="top" width="310px" class="vertical"> <div id="markets" style="margin-top:12px; border-bottom: 2px solid rgb(209, 211, 212);"></div> </td> </tr> </table> </body>
]]>
</Content>
</Module>
